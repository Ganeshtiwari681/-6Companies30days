class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        q = deque()
        fresh_count = 0
        rows, cols = len(grid), len(grid[0])
        for i in range(rows):
            for j in range(cols):
                if grid[i][j] == 2:
                    q.append((i, j, 0))  # (row, col, time)
                elif grid[i][j] == 1:
                    fresh_count += 1
        directions = [(1, 0), (0, 1), (-1, 0), (0, -1)]
        max_time = 0
        while q:
            row, col, time = q.popleft()
            for dr, dc in directions:
                nrow, ncol = row + dr, col + dc
                if 0 <= nrow < rows and 0 <= ncol < cols and grid[nrow][ncol] == 1:
                    grid[nrow][ncol] = 2  # Mark as rotten
                    fresh_count -= 1
                    q.append((nrow, ncol, time + 1))
                    max_time = max(max_time, time + 1)
        return -1 if fresh_count > 0 else max_time
